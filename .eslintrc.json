{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "@stylistic/ts"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": true,
    "lib": [
      "ES2022"              ,
      "ESNext.AsyncIterable"
    ]
  },
  "extends": [
    "eslint:recommended"                                ,
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked"
  ],
  "ignorePatterns": [
    "src/test"    ,
    "out"         ,
    "node_modules",
    "scripts"     ,
    "docs"        ,
    "**/*.d.ts"
  ],
  "rules": {
    "@stylistic/ts/indent": [
      "error",
      2
    ],
    "@stylistic/ts/no-extra-semi": [
      "error",
      "never"
    ],
    "@stylistic/ts/quotes": [
      "error",
      "single",
      {
        "avoidEscape"          : true ,
        "allowTemplateLiterals": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "caughtErrors": "none"
      }
    ],
    "@stylistic/ts/brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": true
      }
    ],
    "@stylistic/ts/no-underscore-dangle": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@stylistic/ts/semi": [
      "error",
      "never"
    ],
    "@stylistic/ts/comma-dangle": [
      "error",
      {
        "arrays"   : "only-multiline",
        "objects"  : "only-multiline",
        "imports"  : "only-multiline",
        "exports"  : "only-multiline",
        "functions": "ignore"
      }
    ]
  }
}

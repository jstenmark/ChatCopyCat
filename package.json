{
  "name": "chatcopycat",
  "displayName": "ChatCopyCat",
  "publisher": "JStenmark",
  "description": "AI assistant development workflow utility",
  "author": {
    "name": "Johannes Stenmark"
  },
  "version": "0.0.7",
  "main": "./out/extension.js",
  "engines": {
    "vscode": "^1.83.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jstenmark/ChatCopyCat.git"
  },
  "categories": [
    "Snippets",
    "Programming Languages",
    "Other"
  ],
  "icon": "images/png/logo_128.png",
  "homepage": "https://github.com/jstenmark/ChatCopyCat",
  "activationEvents": [
    "onStartupFinished"
  ],
  "bugs": {
    "url": "https://github.com/jstenmark/ChatCopyCat/issues"
  },
  "pricing": "Free",
  "extensionKind": ["workspace"],
  "galleryBanner": {
    "color": "#5c2d91",
    "theme": "dark"
  },
  "preview": true,
  "license": "MIT",
  "keywords": [
    "prompt",
    "ai",
    "openai",
    "assistant",
    "chatbot"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Got some fs calls, exec handlers etc. Go with your gut."
    }
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "ChatCopyCat",
      "properties": {
        "chatcopycat.enableTrimming": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Remove leading/trailing newlines, remove trailing spaces and tabs per row"
        },
        "chatcopycat.enableSpacesToTabs": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Indent content using tabs (save tokens)"
        },
        "chatcopycat.enableCommentRemoval": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Remove comments (if possible)"
        },

        "chatcopycat.enableLanguage": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Add languageId in code blocks"
        },
        "chatcopycat.enablePath": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Show file path in code blocks"
        },
        "chatcopycat.enablePosition": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Show line-num in code blocks or diagnostics sections"
        },

        "chatcopycat.enableDiagnostics": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Include code errors for each selection."
        },
        "chatcopycat.customDiagnosticsMessage": {
          "type": "string",
          "default": "",
          "description": "Clipboard: Add a custom text along with the diagnostics section if present"
        },
        "chatcopycat.enableInquiryMessage": {
          "type": "boolean",
          "default": true,
          "description": "Clipboard: Toggle to always prompt for the type of inquiry with each copy action for customized context setting."
        },
        "chatcopycat.inquiryMessagesList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Optimize this code",
            "Fix the syntax/type errors",
            "Fix code logic issues",
            "Debug and identify issues",
            "Improve error handling",
            "Improve code structure",
            "Add unit-tests",
            "Generate docstrings"
          ],
          "description": "Code context: Inquiry types"
        },
        "chatcopycat.defaultInquiryMessage": {
          "type": "string",
          "default": "",
          "description": "Code context: Set a default message that automatically populates during each fresh clipboard"
        },


        "chatcopycat.enableClipboardResetCombo": {
          "type": "boolean",
          "default": true,
          "description": "Copy: Enables the double-tap reset feature for the clipboard, allowing for quick clearing with a simple key combo."
        },
        "chatcopycat.enableForceFocusLastTrackedEditor": {
          "type": "boolean",
          "default": true,
          "description": "Copy: Force document focus (when focus is locked outside of document)."
        },
        "chatcopycat.enableReferenceWithCopy": {
          "type": "boolean",
          "default": false,
          "description": "Copy: Optionality append references to copied selection"
        },
        "chatcopycat.includeDecoratorsInReferences": {
          "type": "boolean",
          "default": "true",
          "description": "References: Include Class/Method/Property-decorators with references ('@'-decorator)"
        },


        "chatcopycat.fileTreeIgnoreList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "out",
            "docs",
            ".vscode",
            ".git",
            "node_modules",
            "__pycache__",
            ".vscode-test",
            "*.log",
            ".github",
            "*.lock",
            "dist"
          ],
          "description": "FileTree: Paths to ignore in file-tree dialog. (gitignore syntax)"
        },
        "chatcopycat.definitionsAllowList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "DefinitionsFiles: Add support for custom extensions (['.ts', '.js', 'Dockerfile'])"
        },
        "chatcopycat.definitionsIgnoreList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "assets",
            "images",
            "*.test.*",
            "test",
            "index.ts",
            "index.js",
            "*.json",
            "*.svg",
            "*.md",
            "*.yml",
            "*.txt"
          ],
          "description": "DefinitionsFiles: Paths to ignore in select dialog. (gitignore syntax)"
        },


        "chatcopycat.catLogLevel": {
          "type": "string",
          "default": "INFO",
          "enum": [
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR"
          ],
          "description": "Extension: Set log level"
        },
        "chatcopycat.catLogMsgTruncateLen": {
          "type": "number",
          "default": 200,
          "description": "Extension: Log message max length (0 = no limit)"
        },
        "chatcopycat.catLogDataTruncateLen": {
          "type": "number",
          "default": 500,
          "description": "Extension: Log data object max length (0 = no limit)"
        },
        "chatcopycat.catEnabledFolderWatcher": {
          "type": "boolean",
          "default": false,
          "description": "Development: Reload window after completed build and install (file watcher)"
        },
        "chatcopycat.catDevMode": {
          "type": "boolean",
          "default": false,
          "description": "Development: Enabled dev functionality"
        }
      }
    },
    "commands": [
      {
        "command": "chatcopycat.copyCode",
        "title": "CCCat: Copy selection or document (or append to clipboard)",
        "group": "chatcopycat",
        "description": "Copies if no previous content, appends if file-tree or previous content exists in clipboard (and diagnostics/references/inquiry type). Can close inquiry dialog with copy key binding"
      },
      {
        "command": "chatcopycat.getFileTree",
        "title": "CCCat: Copy file-tree (or append to clipboard)",
        "group": "chatcopycat",
        "description": "Copies if no previous content, replaces previous file-tree in clipboard, prepends if inquiry is present in clipboard"

      },
      {
        "command": "chatcopycat.copyDefinitions",
        "title": "CCCat: Copy definitions from document (to clipboard)",
        "group": "chatcopycat"
      },
      {
        "command": "chatcopycat.copyDefinitionsFromFiles",
        "title": "CCCat: Copy definitions from files (to clipboard)",
        "group": "chatcopycat",
        "description": "Open a dialog and select which files or folders to copy definitions from, preserves selection. Can add paths to the ignore-list from dialog or reset selection cache"
      },
      {
        "command": "chatcopycat.getSymbolReferences",
        "title": "CCCat: Copy symbol references (to clipboard)",
        "group": "chatcopycat",
        "description": "Copies references from selected symbol or if present in selection"
      },
      {
        "command": "chatcopycat.resetClipboard",
        "title": "CCCat: Clear/reset clipboard",
        "group": "chatcopycat",
        "description": "Clear the clipboard. Default: double tap copy key binding to clear (within 0.5sec)"
      },
      {
        "command": "chatcopycat.openMenu",
        "title": "CCCat: Menu/Command Center",
        "group": "chatcopycat"
      },
      {
        "command": "chatcopycat.openSettings",
        "title": "CCCat: Configuration/Extension settings",
        "group": "chatcopycat"
      },
      {
        "command": "chatcopycat.closeDialog",
        "title": "DevCat: Close dialog",
        "group": "devcat"
      },
      {
        "command": "chatcopycat.reloadWindow",
        "title": "DevCat: Reload Window",
        "group": "devcat"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "chatcopycat.getSymbolReferences",
          "group": "navigation",
          "when": "editorTextFocus && !(inQuickOpen || terminalFocus || filesExplorerFocus || inSearchEditor || searchViewletFocus || replaceInputBoxFocus)"
        }
      ]
    },
    "keybindings": [
      {
        "key": "ctrl+shift+c",
        "command": "chatcopycat.copyCode",
        "when": "(editorTextFocus && !chatcopycat:semaphoreDialogOpen) && !(inQuickOpen || terminalFocus || filesExplorerFocus || inSearchEditor || searchViewletFocus || replaceInputBoxFocus)",
        "description": "Copy, append, reset clipboard"
      },
      {
        "key": "ctrl+shift+c",
        "command": "chatcopycat.closeDialog",
        "when": "chatcopycat:semaphoreDialogOpen && !terminalFocus",
        "description": "Shortcut to close the inquiry dialog"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn compile",
    "compile": "tsc --experimentalDecorators -p ./",
    "watch": "tsc --experimentalDecorators --watch",
    "pretest": "yarn compile && yarn lint",
    "lint": "eslint --ext.ts src",
    "lint:fix": "eslint --fix --ext.ts src",
    "lint:local": "NODE_OPTIONS=--max-old-space-size=4096 eslint --cache --cache-location ~/.cache/eslint/ --color --fix --ext .ts src",
    "lint:debug": "NODE_OPTIONS=--max-old-space-size=4096 eslint --color --debug --ext .ts src",
    "lint:config": "NODE_OPTIONS=--max-old-space-size=4096 eslint --color --print-config .eslintrc.json",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package --yarn",
    "pkg": "rm -f chatcopycat-*.vsix && yarn package && code --install-extension ./chatcopycat-*.vsix && echo 'done' > /home/johannes/.vscode/watchdir/done.txt",
    "vsce:package": "vsce package --yarn",
    "vsce:package:pre": "vsce package --yarn --pre-release",
    "vsce:publish": "vsce publish --yarn",
    "vsce:publish:pre": "vsce publish --yarn --pre-release"
  },
  "devDependencies": {
    "@stylistic/eslint-plugin": "^1.4.0",
    "@stylistic/eslint-plugin-ts": "^1.4.0",
    "@types/eslint": "^8.0.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.3",
    "@types/node": "^17.0.0",
    "@types/vscode": "^1.83.1",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.9.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.6",
    "@vscode/vsce": "^2.21.1",
    "electron": "^27.0.2",
    "eslint": "^8.0.0",
    "glob": "^8.1.0",
    "ignore": "^5.2.4",
    "mocha": "^10.2.0",
    "prettier": "3.0.3",
    "ts-node": "^10.9.1",
    "typescript": "<=5.2.0"
  }
}

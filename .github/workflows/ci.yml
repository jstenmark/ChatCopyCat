name: CI/CD

on: [push,pull_request]

env:
  SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Run headless test
        uses: coactions/setup-xvfb@v1
        with:
          run: yarn test
          working-directory: ./ # optional
          options: # optional
          
  lint:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Run lint
        run: yarn lint

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run CodeQL
        uses: github/codeql-action/analyze@v1

  snyk-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Run Snyk to check for vulnerabilities
        run: npx snyk test --all-projects

  #release:
  #  runs-on: ubuntu-latest
  #  if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #    - name: Install dependencies
  #      run: npm install
  #    - name: Package Extension
  #      run: vsce package
  #    - name: Publish to Marketplace
  #      uses: HaaLeo/publish-vscode-extension@v0
  #      with:
  #        pat: ${{ secrets.VSCE_TOKEN }}
  #        vsix: *.vsix

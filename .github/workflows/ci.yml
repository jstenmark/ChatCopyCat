name: CI/CD

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - name: Install Yarn
        run: yarn install --frozen-lockfile
      - name: Run lint
        run: yarn lint

  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Start Xvfb
        if: runner.os == 'Linux'
        run: |
          sudo Xvfb :99 -ac -screen 0 1280x1024x24  &
          sleep 3
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Run test
        run: yarn test

  compile:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Typescript Compile
        run: yarn compile

  package:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Build extension with VSCE
        run: yarn package

  release:
    needs: [lint, test, compile, package]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
      - run: yarn install --frozen-lockfile
      - name: Publish to VSCode Extension Marketplace
        if: success() && startsWith(github.ref, 'refs/tags/v') && github.ref == 'refs/heads/main'
        run: yarn vcse:package:pre
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      #- name: Publish to OpenVSX
      #  uses: HaaLeo/publish-vscode-extension@v1
      #  id: publishToOpenVSX
      #  with:
      #    pat: ${{ secrets.OVSX_PAT }}


      #- name: Install vsce and ovsx
      # run: npm install --global vsce ovsx
      #env:
      #  OVSX_PAT: ${{ secrets.OVSX_PAT }}
      # run: ovsx publish
      # run from github ui


  #analyze:
  #  name: Analyze
  #  runs-on: ubuntu-latest
  #  steps:
  #  - name: Checkout repository
  #    uses: actions/checkout@v2
  #  - name: Initialize CodeQL
  #    uses: github/codeql-action/init@v1
  #    with:
  #      languages: "javascript,typescript"
  #  - name: Autobuild
  #    uses: github/codeql-action/autobuild@v1
  #  - name: Perform CodeQL Analysis
  #    uses: github/codeql-action/analyze@v1


  #release:
  #  runs-on: ubuntu-latest
  #  if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v2
  #    - name: Install dependencies
  #      run: npm install
  #    - name: Package Extension
  #      run: vsce package
  #    - name: Publish to Marketplace
  #      uses: HaaLeo/publish-vscode-extension@v0
  #      with:
  #        pat: ${{ secrets.VSCE_TOKEN }}
  #        vsix: *.vsix
